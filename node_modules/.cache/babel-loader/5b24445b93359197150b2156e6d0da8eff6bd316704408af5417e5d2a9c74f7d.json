{"ast":null,"code":"var _jsxFileName = \"/Users/sichunai/workspace/blackjack-takehome/src/BlackJack.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useReducer, useRef } from \"react\";\nimport GameTable from \"./components/GameTable\";\nimport GameButtons from \"./components/GameButtons\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PLAYER = {\n  player: \"player\",\n  dealer: \"dealer\"\n};\nconst initialState = {\n  deckId: null,\n  playerHand: [],\n  dealerHand: [],\n  playerSum: {\n    sum: 0,\n    aces: 0\n  },\n  dealerSum: {\n    sum: 0,\n    aces: 0\n  },\n  winner: false,\n  stand: false,\n  gameOver: false\n};\nfunction getSum(hand) {\n  let sum = 0;\n  let aces = 0;\n  for (const card of hand) {\n    if (card == \"ACE\") {\n      aces += 1;\n    } else {\n      const num = parseInt(card);\n      sum = num ? sum + num : sum + 10;\n    }\n  }\n  if (aces >= 1) {\n    if (sum >= 12 - aces) {\n      sum = 1 * aces + sum;\n    } else {\n      sum = aces - 1 + 11 + sum;\n    }\n  }\n  return [sum, aces];\n}\nfunction reducer(state, action) {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case \"setDeckId\":\n      {\n        return {\n          ...state,\n          deckId: payload\n        };\n      }\n    case \"setPlayerHand\":\n      {\n        const playerHand = [...state.playerHand, ...payload];\n        const [sum, aces] = getSum(playerHand.map(c => c.value));\n        return {\n          ...state,\n          playerHand,\n          playerSum: {\n            sum,\n            aces\n          }\n        };\n      }\n    case \"setDealerHand\":\n      {\n        const dealerHand = [...state.dealerHand, ...payload];\n        const [sum, aces] = getSum(dealerHand.map(c => c.value));\n        return {\n          ...state,\n          dealerHand,\n          dealerSum: {\n            sum,\n            aces\n          }\n        };\n      }\n    case \"winner\":\n      {\n        const {\n          playerSum,\n          dealerSum,\n          stand\n        } = state;\n        const bust = playerSum.sum > 21;\n        let gameOver = bust || dealerSum.sum == 21 || stand;\n        if (playerSum.sum == 21 && dealerSum.sum != 21 || dealerSum.sum > 21 || playerSum.sum < 21 && playerSum.sum > dealerSum.sum) {\n          gameOver = true;\n          return {\n            ...state,\n            winner: true,\n            gameOver\n          };\n        } else {\n          return {\n            ...state,\n            winner: false,\n            gameOver\n          };\n        }\n      }\n    case \"stand\":\n      {\n        return {\n          ...state,\n          stand: true\n        };\n      }\n    case \"restart\":\n      {\n        return {\n          ...initialState\n        };\n      }\n    default:\n  }\n}\nexport default function BlackJack() {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const deckIdFetched = useRef(false);\n  const {\n    deckId,\n    dealerHand,\n    dealerSum,\n    playerHand,\n    playerSum,\n    winner,\n    stand,\n    gameOver\n  } = state;\n  async function shuffle(deckCount) {\n    const response = await fetch(`https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=${deckCount}`);\n    const result = await response.json();\n    const {\n      deck_id\n    } = result;\n    dispatch({\n      type: \"setDeckId\",\n      payload: deck_id\n    });\n    return deck_id;\n  }\n  async function drawCards(count, deck_id, player) {\n    const response = await fetch(`https://deckofcardsapi.com/api/deck/${deck_id}/draw/?count=${count}`);\n    const result = await response.json();\n    const {\n      cards\n    } = result;\n    if (player == PLAYER.player) {\n      dispatch({\n        type: \"setPlayerHand\",\n        payload: cards\n      });\n    } else {\n      dispatch({\n        type: \"setDealerHand\",\n        payload: cards\n      });\n    }\n    return cards;\n  }\n  function checkForWinner() {\n    dispatch({\n      type: \"winner\"\n    });\n  }\n  function startGame() {\n    shuffle(1).then(deck => {\n      Promise.all([drawCards(2, deck, \"player\"), drawCards(2, deck, \"dealer\")]);\n    });\n  }\n  function dealerPlays() {\n    drawCards(1, deckId, \"dealer\");\n  }\n  function handleClickHit() {\n    drawCards(1, deckId, \"player\");\n  }\n  function handleClickStand() {\n    dispatch({\n      type: \"stand\"\n    });\n  }\n  function handleClickNew() {\n    deckIdFetched.current = false;\n    dispatch({\n      type: \"restart\"\n    });\n  }\n  useEffect(() => {\n    if (stand) {\n      if (dealerSum.sum < 17) {\n        dealerPlays();\n      } else {\n        checkForWinner();\n      }\n    }\n  }, [stand, dealerSum.sum]);\n  useEffect(() => {\n    if (deckIdFetched.current) return;\n    deckIdFetched.current = true;\n    startGame();\n  }, [gameOver]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"BlackJack\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameTable, {\n      dealerHand: dealerHand,\n      dealerSum: dealerSum.sum,\n      gameOver: gameOver,\n      playerHand: playerHand,\n      playerSum: playerSum.sum,\n      winner: winner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameButtons, {\n      gameOver: gameOver,\n      onClickHit: handleClickHit,\n      onClickNew: handleClickNew,\n      onClickStand: handleClickStand\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n_s(BlackJack, \"78qbHuI5IIpflXOV7KJa5YhDCds=\");\n_c = BlackJack;\nvar _c;\n$RefreshReg$(_c, \"BlackJack\");","map":{"version":3,"names":["React","useEffect","useReducer","useRef","GameTable","GameButtons","jsxDEV","_jsxDEV","PLAYER","player","dealer","initialState","deckId","playerHand","dealerHand","playerSum","sum","aces","dealerSum","winner","stand","gameOver","getSum","hand","card","num","parseInt","reducer","state","action","type","payload","map","c","value","bust","BlackJack","_s","dispatch","deckIdFetched","shuffle","deckCount","response","fetch","result","json","deck_id","drawCards","count","cards","checkForWinner","startGame","then","deck","Promise","all","dealerPlays","handleClickHit","handleClickStand","handleClickNew","current","children","fileName","_jsxFileName","lineNumber","columnNumber","onClickHit","onClickNew","onClickStand","_c","$RefreshReg$"],"sources":["/Users/sichunai/workspace/blackjack-takehome/src/BlackJack.js"],"sourcesContent":["import React, { useEffect, useReducer, useRef } from \"react\";\nimport GameTable from \"./components/GameTable\";\nimport GameButtons from \"./components/GameButtons\";\nimport \"./index.css\";\n\nconst PLAYER = { player: \"player\", dealer: \"dealer\" };\n\nconst initialState = {\n  deckId: null,\n  playerHand: [],\n  dealerHand: [],\n  playerSum: {\n    sum: 0,\n    aces: 0,\n  },\n  dealerSum: {\n    sum: 0,\n    aces: 0,\n  },\n  winner: false,\n  stand: false,\n  gameOver: false,\n};\n\nfunction getSum(hand) {\n  let sum = 0;\n  let aces = 0;\n  for (const card of hand) {\n    if (card == \"ACE\") {\n      aces += 1;\n    } else {\n      const num = parseInt(card);\n      sum = num ? sum + num : sum + 10;\n    }\n  }\n  if (aces >= 1) {\n    if (sum >= 12 - aces) {\n      sum = 1 * aces + sum;\n    } else {\n      sum = aces - 1 + 11 + sum;\n    }\n  }\n  return [sum, aces];\n}\n\nfunction reducer(state, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case \"setDeckId\": {\n      return { ...state, deckId: payload };\n    }\n    case \"setPlayerHand\": {\n      const playerHand = [...state.playerHand, ...payload];\n      const [sum, aces] = getSum(playerHand.map((c) => c.value));\n      return { ...state, playerHand, playerSum: { sum, aces } };\n    }\n    case \"setDealerHand\": {\n      const dealerHand = [...state.dealerHand, ...payload];\n      const [sum, aces] = getSum(dealerHand.map((c) => c.value));\n      return { ...state, dealerHand, dealerSum: { sum, aces } };\n    }\n    case \"winner\": {\n      const { playerSum, dealerSum, stand } = state;\n      const bust = playerSum.sum > 21;\n      let gameOver = bust || dealerSum.sum == 21 || stand;\n      if (\n        (playerSum.sum == 21 && dealerSum.sum != 21) ||\n        dealerSum.sum > 21 ||\n        (playerSum.sum < 21 && playerSum.sum > dealerSum.sum)\n      ) {\n        gameOver = true;\n        return { ...state, winner: true, gameOver };\n      } else {\n        return { ...state, winner: false, gameOver };\n      }\n    }\n    case \"stand\": {\n      return { ...state, stand: true };\n    }\n    case \"restart\": {\n      return { ...initialState };\n    }\n    default:\n  }\n}\n\nexport default function BlackJack() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const deckIdFetched = useRef(false);\n  const {\n    deckId,\n    dealerHand,\n    dealerSum,\n    playerHand,\n    playerSum,\n    winner,\n    stand,\n    gameOver,\n  } = state;\n\n  async function shuffle(deckCount) {\n    const response = await fetch(\n      `https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=${deckCount}`\n    );\n    const result = await response.json();\n    const { deck_id } = result;\n    dispatch({\n      type: \"setDeckId\",\n      payload: deck_id,\n    });\n    return deck_id;\n  }\n\n  async function drawCards(count, deck_id, player) {\n    const response = await fetch(\n      `https://deckofcardsapi.com/api/deck/${deck_id}/draw/?count=${count}`\n    );\n    const result = await response.json();\n    const { cards } = result;\n    if (player == PLAYER.player) {\n      dispatch({\n        type: \"setPlayerHand\",\n        payload: cards,\n      });\n    } else {\n      dispatch({\n        type: \"setDealerHand\",\n        payload: cards,\n      });\n    }\n    return cards;\n  }\n\n  function checkForWinner() {\n    dispatch({\n      type: \"winner\",\n    });\n  }\n\n  function startGame() {\n    shuffle(1).then((deck) => {\n      Promise.all([drawCards(2, deck, \"player\"), drawCards(2, deck, \"dealer\")]);\n    });\n  }\n\n  function dealerPlays() {\n    drawCards(1, deckId, \"dealer\");\n  }\n\n  function handleClickHit() {\n    drawCards(1, deckId, \"player\");\n  }\n\n  function handleClickStand() {\n    dispatch({\n      type: \"stand\",\n    });\n  }\n\n  function handleClickNew() {\n    deckIdFetched.current = false;\n    dispatch({\n      type: \"restart\",\n    });\n  }\n\n  useEffect(() => {\n    if (stand) {\n      if (dealerSum.sum < 17) {\n        dealerPlays();\n      } else {\n        checkForWinner();\n      }\n    }\n  }, [stand, dealerSum.sum]);\n\n  useEffect(() => {\n    if (deckIdFetched.current) return;\n    deckIdFetched.current = true;\n    startGame();\n  }, [gameOver]);\n\n  return (\n    <div>\n      <h1>BlackJack</h1>\n      <GameTable\n        dealerHand={dealerHand}\n        dealerSum={dealerSum.sum}\n        gameOver={gameOver}\n        playerHand={playerHand}\n        playerSum={playerSum.sum}\n        winner={winner}\n      />\n      <GameButtons\n        gameOver={gameOver}\n        onClickHit={handleClickHit}\n        onClickNew={handleClickNew}\n        onClickStand={handleClickStand}\n      />\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}